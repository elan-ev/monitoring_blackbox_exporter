---

- name: install dependencies
  package:
    name: tar
    state: present

- name: create blackbox_exporter user
  user:
    name: blackbox_exporter
    state: present

- name: create blackbox_exporter directory
  file:
    path: /etc/blackbox_exporter
    state: directory
    owner: blackbox_exporter
    group: blackbox_exporter
    mode: '0744'

- name: create blackbox_exporter configuration
  template:
    src: '{{ blackbox_exporter_config_template }}'
    dest: /etc/blackbox_exporter/blackbox.yml
    mode: '0644'
    owner: root
    group: root
  notify: restart blackbox_exporter

- name: get meta data
  block:
    - name: get latest release data
      uri:
        url: https://api.github.com/repos/prometheus/blackbox_exporter/releases/latest  # yamllint disable-line rule:line-length
        return_content: true
        headers:
          Accept: "application/vnd.github.v3+json"
      register: json_reponse
    - name: get blackbox_exporter version on remote
      slurp:
        src: /etc/blackbox_exporter/blackbox_exporter_version
      register: blackbox_exporter_remote_version
      ignore_errors: true

- name: get checksum
  block:
    - name: get sha256sums-file link
      set_fact:
        _sha256_uri: '{{ item.browser_download_url }}'
      when: "'sha256sums' in item.name"
      with_items: '{{ json_reponse.json.assets }}'
    - name: get checksum from github
      set_fact:
        _checksums: "{{ lookup('url', _sha256_uri, wantlist=True) | list }}"
    - name: get checksum for amd64
      set_fact:
        blackbox_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ _checksums }}"
      when: "'linux-amd64.tar.gz' in item"
  when: blackbox_exporter_remote_version["failed"] or blackbox_exporter_remote_version["content"] | b64decode != json_reponse.json.tag_name  # yamllint disable-line rule:line-length

- name: download and install blackbox_exporter
  block:
    - name: get blackbox_exporter download link
      set_fact:
        _blackbox_exporter_uri: '{{ item.browser_download_url }}'
      when: "'linux-amd64.tar.gz' in item.name"
      with_items: '{{ json_reponse.json.assets }}'
    - name: download archive
      get_url:
        url: '{{ _blackbox_exporter_uri }}'
        dest: /tmp/blackbox_exporter-linux-amd64.tar.gz
        checksum: 'sha256:{{ blackbox_exporter_checksum }}'
        mode: '0644'
    - name: unpack archive
      unarchive:
        remote_src: true
        src: /tmp/blackbox_exporter-linux-amd64.tar.gz
        dest: /tmp
        list_files: true
      register: _unarchived
    - name: register unarchived folder
      set_fact:
        _unarchived_folder: '{{ _unarchived.files[0].split("/")[0] }}'
    - name: move blackbox_exporter
      copy:
        remote_src: true
        src: '/tmp/{{ _unarchived_folder }}/blackbox_exporter'
        dest: /usr/local/bin/blackbox_exporter
        owner: root
        group: root
        mode: '0755'
    - name: clean up temp
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /tmp/blackbox_exporter-linux-amd64.tar.gz
        - '/tmp/{{ _unarchived_folder }}'
    - name: create binary version file
      template:
        src: blackbox_exporter_version.j2
        dest: /etc/blackbox_exporter/blackbox_exporter_version
        owner: blackbox_exporter
        group: blackbox_exporter
        mode: '0644'
  when: blackbox_exporter_remote_version["failed"] or blackbox_exporter_remote_version["content"] | b64decode != json_reponse.json.tag_name  # yamllint disable-line rule:line-length
  notify: restart blackbox_exporter

- name: copy service file
  copy:
    src: blackbox_exporter.service
    dest: /etc/systemd/system/
    mode: '0644'
    owner: root
    group: root
  notify: restart blackbox_exporter

- name: start and enable blackbox_exporter
  service:
    name: blackbox_exporter
    state: started
    enabled: true
